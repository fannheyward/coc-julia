{
  "name": "coc-julia",
  "version": "0.1.3",
  "description": "Julia extension for coc.nvim",
  "author": "Heyward Fann <fannheyward@gmail.com>",
  "license": "MIT",
  "main": "lib/index.js",
  "keywords": [
    "coc.nvim"
  ],
  "engines": {
    "coc": "^0.0.70"
  },
  "scripts": {
    "clean": "rimraf lib",
    "watch": "webpack --watch",
    "build": "webpack",
    "prepare": "npm-run-all clean build"
  },
  "devDependencies": {
    "@types/node": "^14.0.6",
    "@types/which": "^1.3.2",
    "coc.nvim": "^0.0.77",
    "npm-run-all": "^4.1.5",
    "rimraf": "^3.0.1",
    "ts-loader": "^8.0.2",
    "typescript": "^4.0.2",
    "vscode-languageserver-protocol": "^3.15.3",
    "webpack": "^4.42.0",
    "webpack-cli": "^3.3.11",
    "which": "^2.0.2"
  },
  "activationEvents": [
    "onLanguage:julia",
    "onLanguage:juliamarkdown",
    "workspaceContains:deps/build.jl",
    "workspaceContains:test/runtests.jl",
    "workspaceContains:benchmark/benchmarks.jl",
    "workspaceContains:docs/make.jl"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "coc-julia configuration",
      "properties": {
        "julia.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable coc-julia extension"
        },
        "julia.executablePath": {
          "type": "string",
          "default": "",
          "description": "Points to the julia executable."
        },
        "julia.environmentPath": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "Path to a julia environment."
        },
        "julia.trace.server": {
          "type": "string",
          "default": "off",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "description": "Traces the communication between client and the language server."
        },
        "julia.format.indent": {
          "type": "integer",
          "default": 4,
          "description": "Indent size for formatting."
        },
        "julia.format.indents": {
          "type": "boolean",
          "default": true,
          "description": "Format file indents."
        },
        "julia.format.ops": {
          "type": "boolean",
          "default": true,
          "description": "Format whitespace around operators."
        },
        "julia.format.tuples": {
          "type": "boolean",
          "default": true,
          "description": "Format tuples."
        },
        "julia.format.curly": {
          "type": "boolean",
          "default": true,
          "description": "Format braces."
        },
        "julia.format.calls": {
          "type": "boolean",
          "default": true,
          "description": "Format function calls."
        },
        "julia.format.iterOps": {
          "type": "boolean",
          "default": true,
          "description": "Format loop iterators."
        },
        "julia.format.comments": {
          "type": "boolean",
          "default": true,
          "description": "Format comments."
        },
        "julia.format.docs": {
          "type": "boolean",
          "default": true,
          "description": "Format inline documentation."
        },
        "julia.format.kw": {
          "type": "boolean",
          "default": true,
          "description": "Remove spaces around = in function keywords."
        },
        "julia.lint.run": {
          "type": "boolean",
          "default": true,
          "description": "Run the linter on active files."
        },
        "julia.lint.missingrefs": {
          "type": "boolean",
          "default": true,
          "description": "Report possibly missing references."
        },
        "julia.lint.call": {
          "type": "boolean",
          "default": false,
          "description": "Check calls against existing methods. (experimental)"
        },
        "julia.lint.iter": {
          "type": "boolean",
          "default": true,
          "description": "Check iterator syntax of loops."
        },
        "julia.lint.constif": {
          "type": "boolean",
          "default": true,
          "description": "Check for constant conditionals of if statements."
        },
        "julia.lint.lazy": {
          "type": "boolean",
          "default": true,
          "description": "Check for deterministic lazy boolean operators."
        },
        "julia.lint.typeparam": {
          "type": "boolean",
          "default": true,
          "description": "Check for unused DataType parameters."
        },
        "julia.lint.modname": {
          "type": "boolean",
          "default": true,
          "description": "Check for invalid submodule names."
        },
        "julia.lint.pirates": {
          "type": "boolean",
          "default": true,
          "description": "Check for type piracy."
        }
      }
    },
    "commands": []
  }
}
